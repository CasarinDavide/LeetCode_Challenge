/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {

        ListNode* cell_l1 = l1;
        ListNode* cell_l2 = l2;
        
        short carry = 0;

        while((cell_l1 != nullptr || cell_l2 != nullptr))
        {
            if (cell_l1->next == nullptr && cell_l2->next != nullptr)
            {
                cell_l1->next = new ListNode;
                cell_l1->next->val = 0;
            }
            else if (cell_l2->next == nullptr && cell_l1->next != nullptr)
            {
                cell_l2->next = new ListNode;
                cell_l2->next->val = 0;
            }

            cell_l2->val = cell_l2->val + cell_l1->val + carry;
            carry = cell_l2->val > 9?1:0;
            cell_l2->val %= 10;
            cell_l1->val = cell_l2->val;

            if(cell_l1->next == nullptr && cell_l2->next == nullptr && carry == 1)
            {
                cell_l1->next = new ListNode;
                cell_l1->next->val = carry;
                return l1;
            }

            cell_l1 = cell_l1->next;
            cell_l2 = cell_l2->next;
        }

        return l1;
        
    }
};
